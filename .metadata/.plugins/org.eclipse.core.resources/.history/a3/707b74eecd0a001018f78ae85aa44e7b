package reflection;

import java.lang.reflect.Constructor;
import java.lang.reflect.Field;
import java.lang.reflect.Method;

// SpringFramework가 User를 들여다 본다
public class Test {
	public static void main(String[] args) throws Exception {
		Class<?> userClass = Class.forName("reflection.User");
		
		//class 이름
		System.out.println(userClass.getName());
		
		//filed
		Field[] fields = userClass.getDeclaredFields();
		for(Field field : fields) {
			System.out.println(field.getName());
			System.out.println(field.getType());
			System.out.println();
		}
		
		//method
		Method[] methods = userClass.getDeclaredMethods();
		for(Method mothod : methods) {
			System.out.println(method.getName());
			System.out.println(method.getReturnType());
			System.out.println();
		}
		
		//constuctor
		Constructor[] constuctors = userClass.getDeclaredConstuctors();
		for(Constructor mothod : methods) {
			System.out.println(constuctor.getName());
			System.out.println(constuctor.getParameterCount());
			System.out.println();
		}

	}
}
